# file: restore_archives.yaml
#
# Application data restoration from archives
#
# - Prepare the inventory based on service configuration or manually
#   collected passwords.
# - Collect the safe password files of each archive to be restored.
# - Collect the backup client public keys from all the client nodes.
# - Copy the safe password files and client keys to removable media.
#
# See the application data restoration process at:
# https://github.com/sakaal/service_platform_ansible/wiki/Data-backup-plan
#
# This playbook implements the first part of the restoration process.
#
# 1. When you need to restore specific application data archives, either
# list them in the main configuration repository in group_vars/ACS
# or manually collect their 'safe password files' to:
# /mnt/sensitive_data/archives/restore/
#
# 2. Then execute this playbook to fetch the backup client public keys and
# to load the encrypted archive files to their destination nodes.
#
# 3. Process the keys on the secure offline host.
#
# 4. Finally, run the restore_commit.yaml playbook to overwrite the current
# state of the application data. This will completely and irrevocably
# destroy the current state of the application (unless you have otherwise
# backed it up manually) and replace it with the archived state.
#
# 5. Currently, there's still an extra step to run the backup_restore script
# manually on each target node. This will be included in the above step later.
#
---

- name: PREPARE THE INVENTORY
  hosts: localhost
  roles:
    - app_data_restore_1

- name: COLLECT THE KEYS FROM CLIENTS
  hosts: dest_nodes
  vars:
    local_user: "{{ lookup('env', 'USER') }}"
  vars_files:
    - "{{ playbook_dir }}/roles/archive_keys/defaults/main.yaml"
  roles:
    - app_data_restore_2
