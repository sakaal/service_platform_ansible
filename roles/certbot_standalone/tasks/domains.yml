# file: roles/certbot_standalone/tasks/domains.yml
---

- name: Check configuration
  assert:
    that:
    - certbot_domains is defined
    - certbot_domains | length > 0
    - admin_email is defined

- name: Shutdown any existing HTTP server
  with_items:
  - httpd
  - nginx
  become: yes
  service: name="{{ item }}" state=stopped
  failed_when: no

- name: Configure the firewall for HTTP
  become: yes
  firewalld:
    immediate: True
    permanent: True
    zone: "{{ firewall_zone }}"
    service: "http"
    state: enabled
  notify: Restart firewalld

- name: Certbot domains
  debug: var=certbot_domains

- name: Obtain certificate via Certbot standalone
  become: yes
  command: certbot --standalone 
           --domains "{{ certbot_domains | join(',') }}"
           --email "{{ admin_email | mandatory }}"
           --agree-tos certonly
           --keep-until-expiring --quiet
           --expand

- name: Certbot certificate renewal script
  become: yes
  template: src=certbot_renewal.sh.j2
            dest="/usr/local/sbin/certbot_renewal"
            mode=0755 owner=root group=root

- name: Certbot certificate renewal systemd service unit file
  become: yes
  template: src=certbot_renewal.service.j2
            dest=/etc/systemd/system/certbot_renewal.service
            mode=0644 owner=root group=root
  register: certbot_renewal_service
  notify: systemctl daemon-reload

- name: Certbot certificate renewal systemd timer unit file
  become: yes
  template: src=certbot_renewal.timer.j2
            dest=/etc/systemd/system/certbot_renewal.timer
            mode=0644 owner=root group=root
  register: certbot_renewal_timer
  notify: systemctl daemon-reload

- name: Enable the Certbot certificate renewal timer
  become: yes
  command: systemctl enable certbot_renewal.timer

- name: Start the Certbot certificate renewal timer
  become: yes
  command: systemctl start certbot_renewal.timer
