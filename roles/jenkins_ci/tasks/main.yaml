# file: roles/jenkins_ci/tasks/main.yaml
---

- assert:
    that:
    - public_hostname is defined
    - public_hostname.strip() != ""
    - jenkins_system_email is defined
    - jenkins_smtp_username is defined
    - jenkins_smtp_password is defined
    - jenkins_smtp_hostname is defined
    - jenkins_smtp_port is defined

- name: Either SSL or TLS may be used for SMTP - not both
  assert:
    that:
    - not ( jenkins_smtp_ssl | bool | default(False) and
            jenkins_smtp_tls | bool | default(True) )

- name: Graphviz (yum)
  when: ansible_pkg_mgr == "yum"
  become: yes
  yum:
    name: "graphviz"

- name: Graphviz (dnf)
  when: ansible_pkg_mgr == "dnf"
  become: yes
  dnf:
    name: "graphviz"

- name: Configure the Jenkins RPM repository
  become: yes
  get_url:
    dest: "/etc/yum.repos.d/jenkins.repo"
    url: "http://pkg.jenkins-ci.org/redhat/jenkins.repo"

#
# jenkins-ci.org key fingerprint: 150fde3f7787e7d11ef4e12a9b7d32f2d50582e6
# https://gist.github.com/kohsuke/10025805
# Note that there must be a newline after the --END PGP PUBLIC KEY BLOCK--
# marker in the key file. Otherwise rpm_key import will fail.
#
- name: Upload the Jenkins RPM repository GPG key
  become: yes
  copy:
    src: "jenkins-ci.org.key"
    dest: "/root/jenkins-ci.org.key"

- name: Import the Jenkins RPM repository GPG key
  become: yes
  rpm_key:
    key: "/root/jenkins-ci.org.key"
    state: present

- name: Ensure Jenkins CI is present (yum)
  when: ansible_pkg_mgr == "yum"
  become: yes
  yum:
    name: "jenkins"

- name: Ensure Jenkins CI is present (dnf)
  when: ansible_pkg_mgr == "dnf"
  become: yes
  dnf:
    name: "jenkins"

- name: Find the Jenkins CI home directory
  become: yes
  shell: "cat /etc/passwd | grep '^jenkins:' | cut -d: -f6"
  register: jenkins_home
  failed_when: jenkins_home.stdout.strip() == ""
  changed_when: False

- set_fact:
    jenkins_home: "{{ jenkins_home.stdout.strip() }}"

- name: Generate SSH key for the jenkins user
  become: yes
  user:
    name: jenkins
    createhome: no
    generate_ssh_key: yes
    ssh_key_bits: "{{ ssh_key_bits | default(4096) }}"
    ssh_key_type: "{{ ssh_key_type | default('rsa') }}"
    ssh_key_comment: "jenkins@{{ ansible_fqdn }}_{{
                      ansible_date_time.iso8601 | replace(':', '') }}"

- name: Copy admin known_hosts to jenkins user
  become: yes
  shell: cp -f /home/{{ admin_username }}/.ssh/known_hosts
         "{{ jenkins_home }}/.ssh/known_hosts"

- name: Jenkins known_hosts permissions
  become: yes
  file:
    dest: "{{ jenkins_home }}/.ssh/known_hosts"
    owner: jenkins
    group: jenkins
    mode: 0600

- name: Create the plugins directory
  become: yes
  file:
    state: directory
    dest: "{{ jenkins_home }}/plugins"
    owner: jenkins
    group: jenkins

- name: Plugins
  with_flattened:
  - "{{ jenkins_ci_default_plugins | default([]) }}"
  - "{{ jenkins_ci_plugins | default([]) }}"
  become: yes
  get_url:
    dest: "{{ jenkins_home }}/plugins/{{ item.name | mandatory }}.jpi"
    url: "https://updates.jenkins-ci.org/latest/{{ item.name }}.hpi"
    owner: jenkins
    group: jenkins
    mode: 0644
  notify: Restart Jenkins

#
# This allows Jenkins E-mail Notifications to use a TLS enabled SMTP server.
#
- name: Enable SMTP TLS for Jenkins
  become: yes
  lineinfile:
    dest: "/etc/sysconfig/jenkins"
    regexp: "^\\s*JENKINS_JAVA_OPTIONS\\s*=.*$"
    line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Dmail.smtp.starttls.enable={{
          "true" if jenkins_smtp_tls|default(yes)|bool else "false" }}"'
  notify: Restart Jenkins

- name: Configure Jenkins modules
  with_items:
  - "jenkins.model.JenkinsLocationConfiguration.xml"
  - "hudson.tasks.Mailer.xml"
  become: yes
  template:
    src: "{{ item }}.j2"
    dest: "{{ jenkins_home }}/{{ item }}"
    owner: jenkins
    group: jenkins
  notify: Restart Jenkins

- name: Open firewall port 8080 access from within the default network
  become: yes
  firewalld:
    permanent: yes
    immediate: yes
    rich_rule: 'rule family="ipv4"
                source address="{{ ansible_default_ipv4.network }}/24"
                port port="8080" protocol="tcp" accept'
    state: enabled
  notify: Restart firewalld

- name: Enable the Jenkins CI service
  become: yes
  service:
    name: jenkins
    state: started
    enabled: yes

#
# Jenkins configuration is best done manually via the web console
# and then kept regularly backed up.
#
# Restore the Jenkins CI home directory from archives after redeployment.
#
