# file: roles/transport_layer_security/tasks/main.yml
#
# Copy X.509 PKI certificates and keys to target hosts (for TLS/SSL)
#
---

#
# Public DNS domain certificate
#

- name: Check if a certificate exists for the domain
  when: (public_dns_zone is defined) and (public_dns_zone != public_hostname)
  become: yes
  local_action: stat path="{{ tls_files_dir }}/certs/{{ public_dns_zone }}-crt.pem"
                     get_md5=no
  register: public_dns_zone_certificate

- name: Domain X.509 server key
  when: not public_dns_zone_certificate|skipped
        and public_dns_zone_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/private/{{ public_dns_zone }}-key.pem"
        dest=/etc/pki/tls/private/{{ public_dns_zone }}-key.pem
        owner=root group=root mode=0600

- name: Domain X.509 certificate
  when: not public_dns_zone_certificate|skipped
        and public_dns_zone_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/certs/{{ public_dns_zone }}-crt.pem"
        dest=/etc/pki/tls/certs/{{ public_dns_zone }}-crt.pem
        owner=root group=root mode=0644

#
# Public subdomain wildcard certificate
#

- name: Check if a wildcard certificate exists for the subdomains
  when: public_dns_zone is defined
  become: yes
  local_action: stat path="{{ tls_files_dir }}/certs/_.{{ public_dns_zone }}-crt.pem"
                     get_md5=no
  register: subdomain_wildcard_certificate

- name: Public subdomain wildcard X.509 server key
  when: public_dns_zone is defined and
        subdomain_wildcard_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/private/_.{{ public_dns_zone | mandatory }}-key.pem"
        dest=/etc/pki/tls/private/_.{{ public_dns_zone }}-key.pem
        owner=root group=root mode=0600

- name: Public subdomain wildcard X.509 certificate
  when: public_dns_zone is defined and
        subdomain_wildcard_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/certs/_.{{ public_dns_zone | mandatory }}-crt.pem"
        dest=/etc/pki/tls/certs/_.{{ public_dns_zone }}-crt.pem
        owner=root group=root mode=0644

#
# Public hostname certificate
#

- name: Check if a certificate exists for the public hostname
  when: public_hostname is defined
  become: yes
  local_action: stat path="{{ tls_files_dir }}/certs/{{ public_hostname }}-crt.pem"
                     get_md5=no
  register: public_hostname_certificate

- name: Public hostname X.509 server key
  when: not public_hostname_certificate|skipped
        and public_hostname_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/private/{{ public_hostname }}-key.pem"
        dest=/etc/pki/tls/private/{{ public_hostname }}-key.pem
        owner=root group=root mode=0600

- name: Public hostname X.509 certificate
  when: not public_hostname_certificate|skipped
        and public_hostname_certificate.stat.exists
  become: yes
  copy: src="{{ tls_files_dir }}/certs/{{ public_hostname }}-crt.pem"
        dest=/etc/pki/tls/certs/{{ public_hostname }}-crt.pem
        owner=root group=root mode=0644

#
# See roles/ca_trust for trusted CA bundles. 
#
